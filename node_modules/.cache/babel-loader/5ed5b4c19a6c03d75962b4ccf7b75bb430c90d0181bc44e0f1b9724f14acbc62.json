{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\acd_project\\\\client\\\\src\\\\context\\\\shop-context.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport { Products } from \"../products\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nexport const ShopContextProvider = props => {\n  _s();\n  const getDefaultCart = () => {\n    let cart = {};\n    for (let i = 1; i < Products.length + 1; i++) {\n      cart[i] = 0;\n    }\n    return cart;\n  };\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] + 1\n    }));\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n  };\n  const updateCartItemCount = (newAmount, itemId) => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: newAmount\n    }));\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = Products.find(product => product.id === Number(item));\n        totalAmount += cartItems[item] * itemInfo.price;\n      }\n    }\n    ;\n    return totalAmount;\n  };\n  console.log(cartItems);\n  const contextValue = {\n    cartItems,\n    addToCart,\n    removeFromCart,\n    updateCartItemCount,\n    getTotalCartAmount\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopContextProvider, \"POXtcbMWIUF6U9Hbv2D9xpykgJ8=\");\n_c = ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useState","Products","jsxDEV","_jsxDEV","ShopContext","ShopContextProvider","props","_s","getDefaultCart","cart","i","length","cartItems","setCartItems","addToCart","itemId","prev","removeFromCart","updateCartItemCount","newAmount","getTotalCartAmount","totalAmount","item","itemInfo","find","product","id","Number","price","console","log","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/acd_project/client/src/context/shop-context.jsx"],"sourcesContent":["import React, {createContext, useState} from \"react\";\r\nimport { Products } from \"../products\";\r\n\r\nexport const ShopContext =  createContext(null);\r\n\r\nexport const ShopContextProvider = (props) => {\r\n\r\n    const getDefaultCart = () => {\r\n        let cart = {};\r\n        for (let i=1; i <Products.length + 1; i++){\r\n            cart [i] = 0;\r\n        }\r\n        return cart;\r\n    };\r\n\r\n    const [cartItems, setCartItems] = useState(getDefaultCart());\r\n\r\n    const addToCart = (itemId) => {\r\n        setCartItems((prev) => ({...prev, [itemId]: prev[itemId] + 1}))    \r\n        \r\n    };\r\n\r\n    const removeFromCart = (itemId) => {\r\n        setCartItems((prev) => ({...prev, [itemId]: prev[itemId] - 1}))    \r\n        \r\n    };\r\n\r\n    const updateCartItemCount = (newAmount, itemId) => {\r\n        setCartItems((prev) => ({...prev, [itemId]: newAmount}));\r\n    };\r\n\r\n    const getTotalCartAmount = () => {\r\n        let totalAmount = 0;\r\n        for (const item in cartItems) {\r\n            if(cartItems[item] > 0){\r\n                let itemInfo = Products.find((product) => product.id === Number(item));\r\n                totalAmount += cartItems[item] * itemInfo.price\r\n            }\r\n        };\r\n        return totalAmount;\r\n    }\r\n    console.log(cartItems);\r\n\r\n    const contextValue = {cartItems, addToCart, removeFromCart, updateCartItemCount, getTotalCartAmount}\r\n    return(\r\n        <ShopContext.Provider value ={contextValue}>\r\n            {props.children}\r\n        </ShopContext.Provider>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,QAAQ,QAAO,OAAO;AACpD,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,OAAO,MAAMC,WAAW,gBAAIL,aAAa,CAAC,IAAI,CAAC;AAE/C,OAAO,MAAMM,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE1C,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzB,IAAIC,IAAI,GAAG,CAAC,CAAC;IACb,KAAK,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAET,QAAQ,CAACU,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAC;MACtCD,IAAI,CAAEC,CAAC,CAAC,GAAG,CAAC;IAChB;IACA,OAAOD,IAAI;EACf,CAAC;EAED,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAACQ,cAAc,CAAC,CAAC,CAAC;EAE5D,MAAMM,SAAS,GAAIC,MAAM,IAAK;IAC1BF,YAAY,CAAEG,IAAI,KAAM;MAAC,GAAGA,IAAI;MAAE,CAACD,MAAM,GAAGC,IAAI,CAACD,MAAM,CAAC,GAAG;IAAC,CAAC,CAAC,CAAC;EAEnE,CAAC;EAED,MAAME,cAAc,GAAIF,MAAM,IAAK;IAC/BF,YAAY,CAAEG,IAAI,KAAM;MAAC,GAAGA,IAAI;MAAE,CAACD,MAAM,GAAGC,IAAI,CAACD,MAAM,CAAC,GAAG;IAAC,CAAC,CAAC,CAAC;EAEnE,CAAC;EAED,MAAMG,mBAAmB,GAAGA,CAACC,SAAS,EAAEJ,MAAM,KAAK;IAC/CF,YAAY,CAAEG,IAAI,KAAM;MAAC,GAAGA,IAAI;MAAE,CAACD,MAAM,GAAGI;IAAS,CAAC,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,IAAIC,WAAW,GAAG,CAAC;IACnB,KAAK,MAAMC,IAAI,IAAIV,SAAS,EAAE;MAC1B,IAAGA,SAAS,CAACU,IAAI,CAAC,GAAG,CAAC,EAAC;QACnB,IAAIC,QAAQ,GAAGtB,QAAQ,CAACuB,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKC,MAAM,CAACL,IAAI,CAAC,CAAC;QACtED,WAAW,IAAIT,SAAS,CAACU,IAAI,CAAC,GAAGC,QAAQ,CAACK,KAAK;MACnD;IACJ;IAAC;IACD,OAAOP,WAAW;EACtB,CAAC;EACDQ,OAAO,CAACC,GAAG,CAAClB,SAAS,CAAC;EAEtB,MAAMmB,YAAY,GAAG;IAACnB,SAAS;IAAEE,SAAS;IAAEG,cAAc;IAAEC,mBAAmB;IAAEE;EAAkB,CAAC;EACpG,oBACIjB,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACC,KAAK,EAAGF,YAAa;IAAAG,QAAA,EACtC5B,KAAK,CAAC4B;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE/B,CAAC;AAAA/B,EAAA,CA5CYF,mBAAmB;AAAAkC,EAAA,GAAnBlC,mBAAmB;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}